{"version":3,"sources":["Listing.js","Map.js","Bar.js","MainView.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","card","minWidth","title","fontSize","pos","marginTop","Listing","props","unit","classes","Card","className","style","width","backgroundColor","color","border","CardContent","display","justifyContent","Typography","gutterBottom","isNaN","textTransform","variant","component","address","bedrooms","bathrooms","CardActions","Button","onClick","window","open","link","size","Box","fontWeight","marginRight","price","mapboxgl","accessToken","Map","state","lat","lng","markers","this","map","container","mapContainer","zoom","center","refreshListings","getCenter","on","e","marker","remove","updateLngLat","lngLat","Marker","setLngLat","addTo","setState","setCenter","lat1","lng1","lat2","lng2","Ï†1","Math","PI","Ï†2","Î”Ï†","Î”Î»","a","sin","cos","atan2","sqrt","forEach","listings","p","i","el","document","createElement","height","margin","background","MozBorderRadius","WebkitBorderRadius","borderRadius","padding","boxShadow","distance","textContent","onclick","stopPropagation","push","position","top","right","float","ref","React","Component","theme","root","flexGrow","txtField","valuetext","value","ButtonAppBar","AppBar","borderbottom","elevation","Toolbar","borderBottom","borderTop","borderLeft","borderRight","borderColor","borderStyle","Slider","track","getAriaValueText","defaultValue","marks","label","min","max","step","onChange","onDistanceChange","TextField","id","type","InputLabelProps","shrink","onBedroomsChange","onBathroomsChange","MainView","beds","baths","fetch","API_URL","then","resp","json","data","process","v","target","parseInt","bed","bath","key","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.06b7232b.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles({\n  card: {\n    minWidth: 275,\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginTop: 5,\n  },\n});\n\nfunction parseUnit(unit) {\n  if (!isNaN(unit)) unit = 'Unit ' + unit;\n  return unit;\n}\n\nexport default function Listing(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <hr style={{width: \"97%\", backgroundColor: '#e3e3e3', color: '#e3e3e3', border: '1px solid #e3e3e3'}}></hr>\n\n      {/* <div > */}\n      <CardContent style={{display: 'flex', justifyContent: 'space-between'}}>\n        <div>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n        {(props.unit ? `${parseUnit(props.unit)}` : 'Entire House')}\n        </Typography>\n        <Typography style={{textTransform: 'capitalize'}}variant=\"h5\" component=\"h2\">\n            {props.address}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          {`${props.bedrooms} bedrooms` + (props.bathrooms ? ` Â· ${props.bathrooms} baths` : '')}\n        </Typography>\n        </div>\n        {/* <Box style={{float: 'right'}}>ðŸš¶ {Math.ceil(props.walkingDistance/60)} mins</Box> */}\n\n      </CardContent>\n      {/* </div> */}\n\n      <CardActions style={{display: 'flex', justifyContent: 'space-between'}}>\n        <Button onClick={() => window.open(props.link, '_blank')} size=\"small\">View Listing</Button>\n        <Box fontWeight=\"fontWeightBold\" style={{marginRight: '10px'}}>{`$${props.price} CAD / month`}</Box>\n\n      </CardActions>\n    </Card>\n  );\n}","// import React, { Component } from 'react';\n// // import GoogleMapReact from 'google-map-react';\n// // import MapIcon from './MapIcon';\n// // import './App.css';\n// import ReactMapboxGl, { Layer, Feature, Marker } from 'react-mapbox-gl';\n\n// const Mapbox = ReactMapboxGl({\n//   accessToken: \"pk.eyJ1IjoiaHVyYW5pIiwiYSI6ImNrOXAyb2xzZTA2dWkzZm9nYzk4cTc1b24ifQ.ku3RdymnlXjzFViYd4-Z2Q\"\n// });\n\n// export default class Map extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       lat: 43.6426,\n//       lng: -79.3871,\n//       zoom: [10],\n//       // showCenterMarker: true\n//     }\n//     navigator.geolocation.getCurrentPosition(pos => {\n//       this.props.refreshListings(pos.coords.latitude, pos.coords.longitude);\n//       this.setState({\n//         lat: pos.coords.latitude,\n//         lng: pos.coords.longitude\n//       });\n//     });\n//   }\n\n//   componentDidMount() {\n//     // const map = new mapboxgl.Map({\n//     //   container: this.mapContainer,\n//     //   style: 'mapbox://styles/mapbox/streets-v9',\n//     //   center: [this.state.lng, this.state.lat],\n//     //   zoom: this.state.zoom\n//     // });\n\n//     // map.on('move', () => {\n//     //   this.setState({\n//     //   lng: map.getCenter().lng.toFixed(4),\n//     //   lat: map.getCenter().lat.toFixed(4),\n//     //   zoom: map.getZoom().toFixed(2)\n//     //   });\n//     // });\n//   }\n  \n//   handleClick = (map, e) => {\n//     map.setCenter(e.lngLat);\n//     // this.props.refreshListings(e.lat, e.lng);\n//   }\n\n//   // hideMarker = (e) => {\n//   //   this.setState({\n//   //     showCenterMarker: false\n//   //   });\n//   //   this.props.refreshListings(e.lat, e.lng);\n//   // }\n//   render() {\n//     return (\n//       // <div style={{ height: '100vh', width: '50%', position: 'fixed', top: 64.2, right: 0 }}>\n//       //   <GoogleMapReact\n//       //     bootstrapURLKeys={{ key: this.GOOGLE_MAP_API_KEY }}\n//       //     center={this.state.center}\n//       //     defaultZoom={this.state.zoom}\n//       //     id=\"map\"\n//       //     onClick={this.handleClick}\n//       //   >\n//       //     {this.props.listings.map((p, i) => {\n//       //       return <MapIcon\n//       //         lat={p.location.lat}\n//       //         lng={p.location.lng}\n//       //         text={`$${p.price} CAD`}\n//       //         withinDistance={p.api_data.distance.value < this.props.distance}\n//       //         key={i}\n//       //       />\n//       //     })}\n//       //     {this.state.showCenterMarker ? <Marker lat={this.state.center.lat} lng={this.state.center.lng} onClick={this.hideMarker}></Marker> : null}\n          \n//       //   </GoogleMapReact>\n//       // </div>\n//       <Mapbox\n//         style=\"mapbox://styles/mapbox/streets-v9\"\n//         containerStyle={{\n//           height: '100vh',\n//           width: '50vw',\n//           float: \"right\",\n//           marginBottom: 54\n//         }}\n//         zoom={this.state.zoom}\n//         center={[this.state.lng, this.state.lat]}\n//         onMove={(map) => {\n//           let center = map.getCenter();\n//           this.setState({lng: center['lng'], lat: center['lat']});\n//           // this.props.refreshListings(center['lat'], center['lng']);\n//         }}\n//         onClick={this.handleClick}\n//       >\n//         <Layer type=\"symbol\" id=\"marker\" layout={{ 'icon-image': 'marker' }}>\n//           <Feature coordinates={[-0.481747846041145, 51.3233379650232]} />\n//         </Layer>\n//       </Mapbox>\n//     )\n//   }\n// }\n\nimport React from 'react';\nimport mapboxgl from 'mapbox-gl';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiaHVyYW5pIiwiYSI6ImNrOXAyb2xzZTA2dWkzZm9nYzk4cTc1b24ifQ.ku3RdymnlXjzFViYd4-Z2Q';\n\nexport default class Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lat:  44.2312,\n      lng: -76.4860\n    };\n    this.markers = [];\n  }\n  componentDidMount() {\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v9',\n      zoom: 12,\n      center: [this.state.lng, this.state.lat]\n    });\n\n    this.props.refreshListings(this.map.getCenter()[1], this.map.getCenter()[0]);\n\n    this.map.on('click', e => {\n      if (this.marker) {\n        this.marker.remove();\n      }\n      this.props.updateLngLat(e.lngLat);\n      this.marker = new mapboxgl.Marker().setLngLat(e.lngLat).addTo(this.map);\n      this.setState({lat: e.lngLat['lat'], lng: e.lngLat['lng']});\n      this.map.setCenter(e.lngLat);\n      this.props.refreshListings(e.lngLat['lat'], e.lngLat['lng']);\n    });\n  }\n\n  distance(lat1, lng1, lat2, lng2) {\n    const R = 6371e3; // metres\n    const Ï†1 = lat1 * Math.PI/180; // Ï†, Î» in radians\n    const Ï†2 = lat2 * Math.PI/180;\n    const Î”Ï† = (lat2-lat1) * Math.PI/180;\n    const Î”Î» = (lng2-lng1) * Math.PI/180;\n\n    const a = Math.sin(Î”Ï†/2) * Math.sin(Î”Ï†/2) +\n              Math.cos(Ï†1) * Math.cos(Ï†2) *\n              Math.sin(Î”Î»/2) * Math.sin(Î”Î»/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n\n    return R * c; // in metres\n  }\n\n  componentWillUnmount() {\n    this.map.remove();\n  }\n\n  render() {\n    const style = {\n      position: 'fixed',\n      top: 0,\n      right: 0,\n      float: 'right',\n      width: \"50vw\",\n      height: \"100%\"\n    };\n\n    this.markers.forEach(marker => marker.remove());\n    this.props.listings.forEach((p, i) => {\n        let el = document.createElement('div');\n        el.style.width = 'max-content';\n        el.style.height = 'max-content';\n        el.style.margin ='10px 0 0 -10px';\n        el.style.background = 'white';\n        el.style.MozBorderRadius = '10px';\n        el.style.WebkitBorderRadius = '10px';\n        el.style.borderRadius = '10px';\n        el.style.padding = '3px';\n        el.style.boxShadow = 'rgba(0, 0, 0, 0.08) 0px 0px 0px 1px, rgba(0, 0, 0, 0.18) 0px 1px 2px';\n        el.style.backgroundColor = this.distance(p.lngLat[1], p.lngLat[0], this.state.lat, this.state.lng) < this.props.distance ? '#afeb78' : \"#ffffff\";\n        el.textContent =`$${p.price} CAD`;\n        el.onclick = (e) => {\n          e.stopPropagation();\n          window.open(p.link);\n        }\n\n        this.markers.push(new mapboxgl.Marker(el).setLngLat(p.lngLat).addTo(this.map));\n    });\n\n    return <div  style={style} ref={el => this.mapContainer = el} className=\"mapContainer\" />;\n  }\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    title: {\n        flexGrow: 1,\n    },\n    txtField: {\n        marginRight: 20,\n        flexGrow: 1\n    }\n}));\n\nfunction valuetext(value) {\n    return `${value}`;\n  }\nexport default function ButtonAppBar(props) {\n    const classes = useStyles();\n    const marks = [\n        {\n            value: 1,\n            label: '1m'\n        },\n        {\n            value: 500,\n            label: '500m'\n        },\n        {\n            value: 1000,\n            label: '1km'\n        },\n        {\n            value: 1500,\n            label: '1.5km'\n        },\n        {\n            value: 2000,\n            label: '2km'\n        },\n        {\n            value: 2500,\n            label: '2.5km'\n        },\n        {\n            value: 3000,\n            label: '3km'\n        },\n    ]\n    return (\n        <div className={classes.root}>\n            <AppBar borderbottom={1} elevation={0} position=\"fixed\" style={{ backgroundColor: 'white' }}>\n                <Toolbar style={{\n                    borderBottom: 1,\n                    borderTop: 0,\n                    borderLeft: 0,\n                    borderRight: 0,\n                    borderColor: '#e3e3e3',\n                    borderStyle: 'solid'\n                }}>\n                    <div style={{ width: '20%', display: 'flex', marginRight: '50px' }}>\n                        <Typography style={{color: 'black', marginRight: '25px', marginTop: '10px'}}>Distance: </Typography>\n                        <Slider\n                            track={false}\n                            getAriaValueText={valuetext}\n                            defaultValue={500}\n                            marks={marks}\n                            min={1}\n                            max={3000}\n                            step={500}\n                            onChange={props.onDistanceChange}\n                        />\n                    </div>\n                    <div style={{ width: '20%', display: 'flex', marginRight: '10px' }}>\n                        <Typography style={{color: 'black', marginRight: '25px', marginTop: '10px'}}>Bedrooms: </Typography>\n                        <TextField\n                            id=\"outlined-number\"\n                            label=\"# of bedrooms\"\n                            type=\"number\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            min={1}\n                            onChange={props.onBedroomsChange}\n                        />\n                    </div>\n\n\n                    <div style={{ width: '20%', display: 'flex' }}>\n                        <Typography style={{color: 'black', marginRight: '25px', marginTop: '10px'}}>Bathrooms: </Typography>\n                        <TextField\n                            id=\"outlined-number\"\n                            label=\"# of bathrooms\"\n                            type=\"number\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            min={1}\n                            onChange={props.onBathroomsChange}\n                        />\n                    </div>\n                    \n                    {/* <Typography style={{ float: 'right', color: 'black' }} variant=\"h6\">\n                        findliving.space\n                    </Typography> */}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}","import React from 'react';\nimport Listing from './Listing';\nimport Map from './Map';\nimport Bar from './Bar';\n\nexport default class MainView extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            listings: [],\n            distance: 500,\n            lat: 44.2312,\n            lng: -76.4860,\n            beds: '',\n            baths: ''\n        };\n        this.API_URL = process.env.REACT_APP_API_URL || \"http://localhost:8080\";\n    }\n    refreshListings = (lat, lng, beds, baths) => {\n        this.setState({lat: lat, lng: lng});\n        fetch(this.API_URL + `/property?lat=${lat}&lng=${lng}&beds=${beds ? beds : this.state.beds}&baths=${baths ? baths : this.state.baths}`).then(resp => resp.json()).then(data => {\n            this.setState({\n                listings: data\n            });\n        });\n    }\n\n    updateLngLat = (lngLat) => {\n        this.setState({lat: lngLat['lat'], lng: lngLat['lng']});\n    }\n    render() {\n        if (this.state.listings) {\n            return (\n                <div>\n                    <Bar \n                    \n                    onDistanceChange={\n                        (e, v) => {\n                            this.setState({distance: v});\n                        }\n                    }\n                    \n                    onBedroomsChange={\n                        (e) => {\n                            let value = !isNaN(e.target.value) && parseInt(e.target.value) > 0 ? e.target.value : ''; \n                            this.setState({beds: value});\n                            this.refreshListings(this.state.lat, this.state.lng, value, this.state.baths)\n                        }\n                    }\n\n                    onBathroomsChange={\n                        (e) => {\n                            let value = !isNaN(e.target.value) && parseInt(e.target.value) > 0 ? e.target.value : ''; \n                            this.setState({baths: value});\n                            this.refreshListings(this.state.lat, this.state.lng, this.state.beds, value);\n                        }\n                    }\n                    />\n                    <div style={{ width: \"50%\", float: 'left', marginTop: 54 }}>\n                        {\n                            this.state.listings                            \n                            .map((p, i) => {\n                                return <Listing\n                                    address={p.address}\n                                    link={p.link}\n                                    bedrooms={p.bed}\n                                    bathrooms={p.bath}\n                                    price={p.price}\n                                    // walkingDistance={p.walkingTime}\n                                    unit={p.unit}\n                                    key={i}\n                                >\n                                </Listing>\n                            })\n                        }\n                    </div>\n                    <Map\n                        listings={this.state.listings}\n                        refreshListings={this.refreshListings}\n                        distance={this.state.distance}\n                        updateLngLat={this.updateLngLat}\n                    />\n                </div>\n            );\n        } else {\n            return <h1>Loading...</h1>\n        }\n    }\n}","import React from 'react';\nimport './App.css';\nimport MainView from './MainView';\n\n\nfunction App() {\n  return (\n    <MainView></MainView>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}